
#Область СлужебныйПрограммныйИнтерфейс

// Функция возвращает ИСТИНА, если текущая база является рабочей.
//  Если ЛОЖЬ, то это копия рабочей базы.
// 
// Возвращаемое значение:
//   - булево
//
Функция ЭтоРабочаяБаза() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	СтрПодключения = ВРег(СокрЛП(СтрокаСоединенияИнформационнойБазы()));
	СтрПодключенияСохраненные = ВРег(СокрЛП(Константы.МесторасположениеРабочейБазыКВА.Получить()));
	
	ПараметрыСоединения = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(СтрПодключения);
	Если ПараметрыСоединения.Свойство("File") Тогда
		Возврат Ложь; // файловая не может быть рабочей
	КонецЕсли;
	ПараметрыСоединенияСохраненные = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(СтрПодключенияСохраненные);
	Если НЕ (ПараметрыСоединенияСохраненные.Свойство("REF") И ПараметрыСоединенияСохраненные.Свойство("Srvr")) Тогда
		Возврат Ложь; // Что-то не так со строкой подключения в константе
	КонецЕсли;
	
	Если ПараметрыСоединения.Ref <> ПараметрыСоединенияСохраненные.Ref Тогда
		Возврат Ложь; // имя базы не совпадает, серверы даже не проверяем
	КонецЕсли;
	
	МассивСерверов = СтрРазделить(ПараметрыСоединения.Srvr, ";", Ложь);
	Для Каждого СтрокаСервер Из МассивСерверов Цикл
		ИмяСервера = СтрРазделить(СтрокаСервер, ".")[0];
		Поз = СтрНайти(ИмяСервера, ":");
		Если Поз Тогда
			ИмяСервера = Лев(ИмяСервера, Поз - 1);
		КонецЕсли;
		Если СтрНайти(ПараметрыСоединенияСохраненные.Srvr, ИмяСервера) Тогда
			Возврат Истина; // нашли в списке серверов в строке подключения один из серверов
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции // ЭтоРабочаяБаза()

// Функция возвращает ИСТИНА, если текущая база является
//  предрелизной (staging). Иначе Неопределено.
// 
// Возвращаемое значение:
//   - булево
//
Функция ЭтоПредрелизнаяБаза() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	СтрПодключения = ВРег(СокрЛП(СтрокаСоединенияИнформационнойБазы()));
	
	ПараметрыСоединения = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(СтрПодключения);
	Если ПараметрыСоединения.Свойство("File") Тогда
		Возврат Ложь; // файловая не может быть предрелизной
	КонецЕсли;
	
	Если ПараметрыСоединения.Свойство("REF") И СтрНайти(ВРЕГ(ПараметрыСоединения.Ref), "STAGING") > 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции // ЭтоПредрелизнаяБаза()

// Функция возвращает ИСТИНА, если текущая база является
//  эталонной (etalon). Иначе Неопределено.
// 
// Возвращаемое значение:
//   - булево
//
Функция ЭтоЭталоннаяБаза() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	СтрПодключения = ВРег(СокрЛП(СтрокаСоединенияИнформационнойБазы()));
	
	ПараметрыСоединения = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(СтрПодключения);
	Если ПараметрыСоединения.Свойство("File") Тогда
		Возврат Ложь; // файловая не может быть предрелизной
	КонецЕсли;
	
	Если ПараметрыСоединения.Свойство("REF") И СтрНайти(ВРЕГ(ПараметрыСоединения.Ref), "ETALON") > 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции // ЭтоЭталоннаяБаза()

// Функция возвращает ИСТИНА, если текущая база является
//  тестовой (prestaging or test). Иначе Неопределено.
// 
// Возвращаемое значение:
//   - булево
//
Функция ЭтоТестоваяБаза() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	СтрПодключения = ВРег(СокрЛП(СтрокаСоединенияИнформационнойБазы()));
	
	ПараметрыСоединения = СтроковыеФункцииКлиентСервер.ПараметрыИзСтроки(СтрПодключения);
	Если ПараметрыСоединения.Свойство("File") Тогда
		Возврат Ложь; // файловая не может быть предрелизной
	КонецЕсли;
	
	Если ПараметрыСоединения.Свойство("REF") Тогда
		ИмяБазы = ВРЕГ(ПараметрыСоединения.Ref);
		Если СтрНайти(ИмяБазы, "TEST") > 0 ИЛИ СтрНайти(ИмяБазы, "PRESTAGING") > 0 Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат Ложь;

КонецФункции // ЭтоТестоваяБаза()

#КонецОбласти