
#Область ПрограммныйИнтерфейс

// Функция - Получить объект потокового чтения
//
// Параметры:
//	ЧитаемаяСтрока - данные, которые необходимо последовательно прочитать.
// 
// Возвращаемое значение:
//	ЧтениеJSON - объект чтения JSON данных.
//
Функция ПолучитьОбъектПотоковогоЧтения(ЧитаемаяСтрока) Экспорт
	
	ТекЧтение = Новый ЧтениеJSON;
	ТекЧтение.УстановитьСтроку(ЧитаемаяСтрока);
	
	Возврат ТекЧтение;
	
КонецФункции

// Функция - Получить объект потоковой записи
//
// Параметры:
//	ПараметрыЗаписи - входящие параметры записи XML.
//
// Возвращаемое значение:
//	ЗаписьXML - объект записи XML данных.
//
Функция ПолучитьОбъектПотоковойЗаписи(ПараметрыЗаписи = Неопределено) Экспорт
	
	ТекЗапись = Новый ЗаписьJSON;
	
	Если ПараметрыЗаписи = Неопределено Тогда
		
		ПараметрыЗаписи = ТекЗапись.Параметры;
	
	КонецЕсли;	
	
	ТекЗапись.УстановитьСтроку(ПараметрыЗаписи);
	
	Возврат ТекЗапись;

КонецФункции	

// Функция - Прочитать объект из потока
//
// Параметры:
//	Поток - объект чтения JSON, которых нужно прочитать.
//	ТипОбъекта - тип объекта для чтения.
// 
// Возвращаемое значение:
//	Результат чтения объекта.
//
Функция ПрочитатьОбъектИзПотока(Поток, ТипОбъекта) Экспорт
	
	Возврат ФабрикаXDTO.ПрочитатьJSON(Поток, ТипОбъекта);
	
КонецФункции

// Функция - Записать объект поток
//
// Параметры:
//	Объект - объект, который необходимо записать.
//	Фабрика - XDTO-фабрика.
// 
// Возвращаемое значение:
//	Результат записи XDTO-объекта в объект записи JSON.
//
Функция ЗаписатьОбъектВПоток(Объект, Фабрика = Неопределено) Экспорт
	
	xdtoФабрика = ?(Фабрика = Неопределено, ФабрикаXDTO, Фабрика);
	jsonЗапись = ПолучитьОбъектПотоковойЗаписи();
	xdtoФабрика.ЗаписатьJSON(jsonЗапись, Объект);
	
	Возврат jsonЗапись.Закрыть();
	
КонецФункции

// Функция - Сериализовать объект
//
// Параметры:
//	Источник - объект, который необходимо сериализовать.
// 
// Возвращаемое значение:
//	Результат сериализации объекта.	
//
Функция СериализоватьОбъект(Источник) Экспорт
	
	ТекОбъектЗаписи = сшпФункцииРаботыJSON.ПолучитьОбъектПотоковойЗаписи();
	СериализаторXDTO.ЗаписатьJSON(текОбъектЗаписи, Источник, НазначениеТипаXML.Явное);
	
	Возврат текОбъектЗаписи.Закрыть();
	
КонецФункции	

// Функция - Десериализовать объект
//
// Параметры:
//	Источник - объект, который необходимо десериализовать.
// 
// Возвращаемое значение:
//	Результат десериализации объекта.	
//
Функция ДесериализоватьОбъект(Источник) Экспорт
	
	результатОбъект = Неопределено;
	
	потокЧтение = сшпФункцииРаботыJSON.ПолучитьОбъектПотоковогоЧтения(Источник);
	результатОбъект = СериализаторXDTO.ПрочитатьJSON(потокЧтение);
	потокЧтение.Закрыть();
	
	Возврат результатОбъект;
	
КонецФункции	

// Функция - Сформировать JSON
//
// Параметры:
//	сткДанные - входящие данные для формирования.
// 
// Возвращаемое значение:
//	Запись JSON.
//
Функция СформироватьJSON(СткДанные) Экспорт
	
	ТекВозврат = Неопределено;
	
	Если ЗначениеЗаполнено(СткДанные) И ТипЗнч(СткДанные) = Тип("Структура") Тогда
		
		текЗапись = Новый ЗаписьJSON;
		текЗапись.УстановитьСтроку();
		СформироватьОбъектJSON(текЗапись, сткДанные);
		текВозврат = текЗапись.Закрыть();
		
	КонецЕсли;
	
	Возврат текВозврат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - Сформировать элемент JSON
//
// Параметры:
//	Запись - ЗаписьJSON - Объект для записи 
//	Данные - Структура, Массив, Строка - Данные для записи 
//	Имя - Строка - Имя элемента
// 
Процедура СформироватьЭлементJSON(Запись, Данные, Имя = "")
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		
		СформироватьОбъектJSON(Запись, Данные, Имя);
	
	ИначеЕсли ТипЗнч(Данные) = Тип("Массив") Тогда
		
		СформироватьМассивJSON(Запись, Данные, Имя);
	
	Иначе	
		
		Запись.ЗаписатьИмяСвойства(Имя);
		Запись.ЗаписатьЗначение(XMLСтрока(Данные));
	
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Сформировать объект JSON
//
// Параметры:
//	Запись - ЗаписьJSON - Объект для записи 
//	Данные - Структура, Массив, Строка - Данные для записи 
//	Имя - Строка - Имя элемента
//
Процедура СформироватьОбъектJSON(Запись, Данные, Имя = "")
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		
		Если ЗначениеЗаполнено(Имя) Тогда
			
			Запись.ЗаписатьИмяСвойства(Имя);
			
		КонецЕсли;
			
		Запись.ЗаписатьНачалоОбъекта();
		
		Для Каждого текЭлемент Из Данные Цикл
			
			СформироватьЭлементJSON(Запись, текЭлемент.Значение, текЭлемент.Ключ);
			
		КонецЦикла;
		
		Запись.ЗаписатьКонецОбъекта();
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Сформировать массив JSON
//
// Параметры:
//	Запись - ЗаписьJSON - Объект для записи 
//	Данные - Структура, Массив, Строка - Данные для записи 
//	Имя - Строка - Имя элемента
//
Процедура СформироватьМассивJSON(Запись, Данные, Имя = "")
	
	Если ТипЗнч(Данные) = Тип("Массив") Тогда
		
		Запись.ЗаписатьИмяСвойства(Имя);
		Запись.ЗаписатьНачалоМассива();
		
		Для Каждого ТекЭлемент Из Данные Цикл
			
			СформироватьЭлементJSON(Запись, ТекЭлемент);
			
		КонецЦикла;
		
		Запись.ЗаписатьКонецМассива();
					
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти