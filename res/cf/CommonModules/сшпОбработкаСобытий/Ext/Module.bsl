
#Область ПрограммныйИнтерфейс

// Процедура - Выполнить обмен СШП
//
// Параметры:
//  Источник - Справочник.Объект, Документ.Объект - объект-источник события. 
//  Отказ - Булево - Признак отказа от дальнейшей обработки. 
//
Процедура ВыполнитьОбменСШП(Источник, Отказ) Экспорт
				
	Если Отказ = Ложь Тогда
		
		ЗарегистрироватьСобытие(Источник);
		
	КонецЕсли;
			
КонецПроцедуры

// Процедура - Выполнить обмен СШПРС
//
// Параметры:
//  Источник - РегистрСведений.НаборЗаписей - набор-источник события.
//  Отказ - Булево - Признак отказа от дальнейшей обработки.
//  Замещение - Булево - Признак необходимости замещения существующей записи.
//
Процедура ВыполнитьОбменСШПРС(Источник, Отказ, Замещение) Экспорт
	 	
	Если Отказ = Ложь И Источник.Количество() > 0 Тогда
		 
		ЗарегистрироватьСобытие(Источник, Истина);
		
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - Зарегистрировать событие
//
// Параметры:
//  Источник - Справочни.Объект, Документ.Объект, РегистрСведений.НаборЗаписей - объект-источник события.
//	ЭтоРегистр - булево - это событие регистрации регистра
//	ЭтоУдаление - булево - это удаление  
//
Процедура ЗарегистрироватьСобытие(Источник, ЭтоРегистр = Ложь, ЭтоУдаление = Ложь)
	
	ИсключитьИзОбработки = Источник.ДополнительныеСвойства.Свойство("СШПНеобрабатывать");
	
	Если ИсключитьИзОбработки = Ложь Тогда
		
		ТипОбъекта = Источник.Метаданные().ПолноеИмя();
		
		Если сшпКэшируемыеФункции.УчаствуетВИнтеграции(ТипОбъекта, сшпФункциональныеОпции.ВерсияОбработчиков()) Тогда
			
			ЗначениеХранения = Неопределено;
			
			Если ЭтоУдаление Тогда
				 
				МетодХранения = Перечисления.сшпМетодХранения.Сериализация;
				
			Иначе
				
				МетодХранения = сшпКэшируемыеФункции.ПолучитьМетодХранения(ТипОбъекта, сшпФункциональныеОпции.ВерсияОбработчиков());
				
			КонецЕсли;
			
			ФорматСериализация = сшпФункциональныеОпции.ФорматСериализации();
			
			Если МетодХранения = Перечисления.сшпМетодХранения.Сериализация Тогда
					
				#Если ТолстыйКлиентОбычноеПриложение Тогда
					ЗначениеХранения = сшпОбщегоНазначенияОбычноеПриложение.СериализоватьОбъект(ФорматСериализация, Источник);
				#Иначе				
					ЗначениеХранения = сшпОбщегоНазначения.СериализоватьОбъект(ФорматСериализация, Источник);
				#КонецЕсли
				
			Иначе
				
				ФорматСериализация = сшпФункциональныеОпции.ФорматСообщения();
				
				Если ЭтоРегистр Тогда
					
					ЗначениеХранения = Источник.Отбор;
					
				Иначе
					
					ЗначениеХранения = Источник.Ссылка;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ЭтоРегистр Или ЭтоУдаление Тогда
				
				СсылкаНаОбъект = Неопределено;
				
			Иначе
				
				СсылкаНаОбъект = Источник.Ссылка;
				
			КонецЕсли;
				
			Если Не ЗначениеХранения = Неопределено Тогда
				
				#Если ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
					
					ЗначениеХранения = Новый ХранилищеЗначения(ЗначениеХранения);
					ПомещатьВХранилищеЗначения = Ложь;
					
				#Иначе
					
					ПомещатьВХранилищеЗначения = Истина;
					
				#КонецЕсли
					
				сшпРаботаСДанными.ПоместитьВОчередьИсходящих(ТипОбъекта, ЗначениеХранения, ФорматСериализация, МетодХранения, ПомещатьВХранилищеЗначения, ЭтоУдаление, СсылкаНаОбъект);
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры	

// Процедура - Зарегистрировать событие удаления
//
// Параметры:
//  Источник - Справочни.Объект, Документ.Объект, РегистрСведений.НаборЗаписей - объект-источник события.
//  Отказ - Булево - Отказ.
//
Процедура ОбменСправочникиДокументыПередУдалениемПередУдалением(Источник, Отказ) Экспорт
	
	Если Отказ = Ложь Тогда
		
		ЗарегистрироватьСобытие(Источник, , Истина);
		
	КонецЕсли;

КонецПроцедуры

// Процедура - ВыполнитьОбменСШПРР
// 
// Параметры:
// 	Источник - РегистрРасчета.НаборЗаписей - объект-источник события.
// 	Отказ - Булево - Отказ
//
Процедура ВыполнитьОбменСШПРР(Источник, Отказ, Замещение, ТолькоЗапись, ЗаписьФактическогоПериодаДействия, ЗаписьПерерасчетов) Экспорт
	
	Если Отказ = Ложь И Источник.Количество() > 0 Тогда 
		
		ЗарегистрироватьСобытие(Источник, Истина);
	
	КонецЕсли;		

КонецПроцедуры

#КонецОбласти
