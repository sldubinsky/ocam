
#Область ПрограммныйИнтерфейс

// Функция - Получить объект потокового чтения
//
// Параметры:
//	ЧитаемыеДанные - данные, которые необходимо последовательно прочитать.
// 
// Возвращаемое значение:
//	ЧтениеFastInfoset - объект чтения XML данных.
//
Функция ПолучитьОбъектПотоковогоЧтения(ЧитаемыеДанные) Экспорт
	
	ТекЧтение = Новый ЧтениеFastInfoset;
	
	Если ТипЗнч(ЧитаемыеДанные) = Тип("ДвоичныеДанные") Тогда
		
		ТекЧтение.УстановитьДвоичныеДанные(ЧитаемыеДанные);
		
	Иначе
		
		ТекЧтение.УстановитьДвоичныеДанные(Base64Значение(ЧитаемыеДанные));
		
	КонецЕсли;
	
	Возврат ТекЧтение;
	
КонецФункции

// Функция - Получить объект потоковой записи
// 
// Возвращаемое значение:
//	ЗаписьFastInfoset - объект записи XML данных.
//
Функция ПолучитьОбъектПотоковойЗаписи() Экспорт
	
	ТекЗапись = Новый ЗаписьFastInfoset;
	ТекЗапись.УстановитьДвоичныеДанные();
	
	Возврат текЗапись;
	
КонецФункции

// Функция - Прочитать объект из потока
//
// Параметры:
//	Поток - объект чтения XML, которых нужно прочитать.
//	ТипОбъекта - тип объекта для чтения.
// 
// Возвращаемое значение:
//	Результат чтения объекта.
//
Функция ПрочитатьОбъектИзПотока(Поток, ТипОбъекта) Экспорт
	
	Возврат ФабрикаXDTO.ПрочитатьXML(Поток, ТипОбъекта);
	
КонецФункции

// Функция - Записать объект поток
//
// Параметры:
//	Объект - объект, который необходимо записать.
//	Фабрика - XDTO-фабрика.
// 
// Возвращаемое значение:
//	Результат записи XDTO-объекта в объект записи XML.
//
Функция ЗаписатьОбъектВПоток(Объект, Фабрика = Неопределено) Экспорт
	
	xdtoФабрика = ?(Фабрика = Неопределено, ФабрикаXDTO, Фабрика);
	xmlЗапись = ПолучитьОбъектПотоковойЗаписи();
	
	xdtoФабрика.ЗаписатьXML(xmlЗапись, Объект);
	
	Возврат xmlЗапись.Закрыть();
	
КонецФункции

// Функция - Сериализовать объект
//
// Параметры:
//	Источник - объект, который необходимо сериализовать.
// 
// Возвращаемое значение:
//	Результат сериализации объекта.	
//
Функция СериализоватьОбъект(Источник) Экспорт
	
	ТекОбъектЗаписи = сшпФункцииРаботыFastInfoset.ПолучитьОбъектПотоковойЗаписи();
	СериализаторXDTO.ЗаписатьXML(ТекОбъектЗаписи, Источник, НазначениеТипаXML.Явное);
	
	Возврат текОбъектЗаписи.Закрыть();
	
КонецФункции	

// Функция - Десериализовать объект
//
// Параметры:
//	Источник - объект, который необходимо десериализовать.
// 
// Возвращаемое значение:
//	Результат десериализации объекта.	
//
Функция ДесериализоватьОбъект(Источник) Экспорт
	
	РезультатОбъект = Неопределено;
	
	ПотокЧтение = сшпФункцииРаботыFastInfoset.ПолучитьОбъектПотоковогоЧтения(Источник);
	РезультатОбъект = СериализаторXDTO.ПрочитатьXML(потокЧтение);
	ПотокЧтение.Закрыть();
	
	Возврат РезультатОбъект;
	
КонецФункции	

// Функция - Сформировать FastInfoset
//
// Параметры:
//	сткДанные - входящие данные для формирования.
//	ДобавитьОбъявление - признак необходимости добавления объявления в начало XML-документа.
// 
// Возвращаемое значение:
//	Запись FastInfoset.
//
Функция СформироватьFastInfoset(СткДанные, ДобавитьОбъявление = Ложь) Экспорт
	
	ТекВозврат = Неопределено;
	
	Если ЗначениеЗаполнено(СткДанные) И ТипЗнч(СткДанные) = Тип("Структура") Тогда
		
		ТекЗапись = Новый ЗаписьFastInfoset;
		ТекЗапись.УстановитьДвоичныеДанные();
		
		Если ДобавитьОбъявление Тогда
			
			ТекЗапись.ЗаписатьОбъявлениеXML();
			
		КонецЕсли;
		
		СформироватьУзелFastInfoset(ТекЗапись, СткДанные, "classData", Истина);
		ТекВозврат = ТекЗапись.Закрыть();
		
	КонецЕсли;
	
	Возврат ТекВозврат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - Сформировать элемент FastInfoset
//
// Параметры:
//	ЗаписьXML - ЗаписьFastInfoSet - Объект для записи 
//	Данные - Структура, Массив, Строка - Данные для записи 
//	Имя - Строка - Имя элемента
// 
Процедура СформироватьЭлементFastInfoset(ЗаписьXML, Данные, Имя)
	
	ТипЗначения = ТипЗнч(Данные);
	
	Если ТипЗначения = Тип("Структура") Или ТипЗначения = Тип("Массив") Тогда
		
		СформироватьУзелFastInfoset(ЗаписьXML, Данные, Имя);
		
	Иначе
		
		ЗаписьXML.ЗаписатьНачалоЭлемента(Имя);
		
		Если ЗначениеЗаполнено(Данные) Тогда
			
			ЗаписьXML.ЗаписатьТекст(XMLСтрока(Данные));
			
		Иначе
			
			ЗаписьXML.ЗаписатьАтрибут("xsi:nil", "true");
			
		КонецЕсли;
		
		ЗаписьXML.ЗаписатьКонецЭлемента();
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Сформировать узел FastInfoset
//
// Параметры:
//	Запись - ЗаписьFastInfoSet - Объект для записи 
//	Данные - Структура, Массив, Строка - Данные для записи 
//	Имя - Строка - Имя элемента
//	ДобавитьПространстваИмен - Булево - добавить пространство имен
// 
Процедура СформироватьУзелFastInfoset(Запись, Данные, Имя, ДобавитьПространстваИмен = Ложь)
	
	Запись.ЗаписатьНачалоЭлемента(Имя);
	
	Если ДобавитьПространстваИмен Тогда
		
		Запись.ЗаписатьСоответствиеПространстваИмен("", "http://com.example/2012/10/31/sometext");
		Запись.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
		
	КонецЕсли;
		
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		
		Для Каждого ТекЭлемент Из Данные Цикл
			
			СформироватьЭлементFastInfoset(Запись, ТекЭлемент.Значение, ТекЭлемент.Ключ);
		
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Данные) = Тип("Массив") Тогда
		
		Для Каждого ТекЭлемент Из Данные Цикл
			
			ТипЗначения = ТипЗнч(текЭлемент);
			
			Если ТипЗначения = Тип("Структура") Тогда
				
				СформироватьУзелFastInfoset(Запись, ТекЭлемент, "row");
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Запись.ЗаписатьКонецЭлемента();
	
КонецПроцедуры	

#КонецОбласти