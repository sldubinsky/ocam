
&НаКлиенте
Процедура УправлениеИБ(ПараметрыКоманды, ПараметрыВыполненияКоманды)
	
	Оп = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияФормы", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура("ИнформационнаяБаза", Объект.Ссылка);
	
	ОткрытьФорму("Обработка.ИзменениеПараметровИБНаСервереПриложений.Форма", ПараметрыФормы, ЭтотОбъект, Объект.Ссылка, , ,Оп);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// новый объект
		Объект.Пользователь = Пользователи.ТекущийПользователь();
		ЗаполнитьПроект();
		Если ЗначениеЗаполнено(Объект.Проект) Тогда
			Если НЕ ПройденКонтрольЛимита() Тогда
				ОбщегоНазначения.СообщитьПользователю("Превышен лимит информационных баз, обратитесь к техническому архитектору!",,,,Отказ);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ДоступностьЭлементов() Экспорт

	Если НЕ ПустаяСтрока(Объект.ИД_ИнформационнойБазы) Тогда
		Элементы.Наименование.Доступность = Ложь;
		Элементы.СерверБазДанных.Доступность = Ложь;
		Элементы.СерверПриложений.Доступность = Ложь;
		Элементы.ИД_ИнформационнойБазы.Доступность = Ложь;
	Иначе
		Элементы.Наименование.Доступность = Истина;
		Элементы.СерверБазДанных.Доступность = Истина;
		Элементы.СерверПриложений.Доступность = Истина;
		Элементы.ИД_ИнформационнойБазы.Доступность = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияФормы(РезультатЗакрытия, ДопПараметры) Экспорт
	ЭтаФорма.Прочитать();
	ДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//Приведение наименования в верхний регистр.
	Объект.Наименование = ВРег(Объект.Наименование);
	
	Если НЕ(ИмяБазыДопустимо(Объект.Наименование)) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Имя базы не корректно (не соответствует шаблону)!");
		Отказ = Истина;
	КонецЕсли;
	
	Если ПроверитьБазаСуществует() Тогда 
		ПредупреждениеАсинх("Информационная база с таким именем уже существует!", 30, "База существует");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьБазаСуществует()

	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	ЭтоНовый = СправочникОбъект.ЭтоНовый();
	Возврат Справочники.ИнформационныеБазы1С.БазаСуществует(Объект.Наименование, Объект.Ссылка, ЭтоНовый);
	
КонецФункции

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ПровереноИнтерактивно", Истина);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПроект()

	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Проекты.Ссылка КАК Проект
	               |ИЗ
	               |	Справочник.Проекты КАК Проекты";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 Тогда
		// единственный проект
		Выборка.Следующий();
		Объект.Проект = Выборка.Проект;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПройденКонтрольЛимита()

	ТекстЗапроса = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИнформационныеБазы1С.Ссылка) КАК ИнформационнаяБаза
	               |ПОМЕСТИТЬ ВТ_КоличествоИБ
	               |ИЗ
	               |	Справочник.ИнформационныеБазы1С КАК ИнформационныеБазы1С
	               |ГДЕ
	               |	ИнформационныеБазы1С.Проект = &Проект
	               |	И ИнформационныеБазы1С.Пользователь = &Пользователь
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Проекты.ЛимитИнформационныхБаз КАК ЛимитИнформационныхБаз
	               |ПОМЕСТИТЬ ВТ_Лимит
	               |ИЗ
	               |	Справочник.Проекты КАК Проекты
	               |ГДЕ
	               |	Проекты.Ссылка = &Проект
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_КоличествоИБ.ИнформационнаяБаза КАК ИнформационнаяБаза,
	               |	ВТ_Лимит.ЛимитИнформационныхБаз КАК ЛимитИнформационныхБаз,
	               |	ВТ_Лимит.ЛимитИнформационныхБаз - ВТ_КоличествоИБ.ИнформационнаяБаза КАК Остаток
	               |ИЗ
	               |	ВТ_КоличествоИБ КАК ВТ_КоличествоИБ,
	               |	ВТ_Лимит КАК ВТ_Лимит
	               |ГДЕ
	               |	ВТ_Лимит.ЛимитИнформационныхБаз - ВТ_КоличествоИБ.ИнформационнаяБаза > 0";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Пользователь", Объект.Пользователь);
	Запрос.УстановитьПараметр("Проект", Объект.Проект);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;

КонецФункции // ПройденКонтрольЛимита()

&НаКлиенте
Процедура СерверПриложенийНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ДанныеВыбора = ПолучитьСервераПриложений(Объект.Проект);
	Если ЗначениеЗаполнено(ДанныеВыбора) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСервераПриложений(Проект)
	
	Возврат Справочники.СерверыПриложений1С.ПолучитьСписокДляВыбора(Проект);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСервераБазДанных(Проект)
	
	Возврат Справочники.СерверыБазДанных.ПолучитьСписокДляВыбора(Проект);
	
КонецФункции

// Проверяет наличие недопустимых символов в имени базы.
//
// Параметры:
//  НаименованиеИБ  - Строка - имя базы.
//
// Возвращаемое значение:
//   Булево   - признак того, что имя базы соответствует шаблону
//
&НаСервереБезКонтекста
Функция ИмяБазыДопустимо(НаименованиеИБ) Экспорт

	Возврат СтрПодобнаПоРегулярномуВыражению(СокрЛП(НаименованиеИБ), "(_?[A-Z0-9]*)+", Истина, Ложь);

КонецФункции

&НаКлиенте
Процедура СерверБазДанныхНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	ДанныеВыбора = ПолучитьСервераБазДанных(Объект.Проект);
	Если ЗначениеЗаполнено(ДанныеВыбора) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
КонецПроцедуры
