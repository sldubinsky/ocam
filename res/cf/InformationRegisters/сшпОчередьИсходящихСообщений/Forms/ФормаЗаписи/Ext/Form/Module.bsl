
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Запись.ИдентификаторСобытия) Тогда
		
		текЗапрос = Новый Запрос("ВЫБРАТЬ
		                         |	тбСостояние.СтатусСообщения,
		                         |	тбСостояние.ДатаИзменения,
		                         |	тбСостояние.ОписаниеОшибки
		                         |ИЗ
		                         |	РегистрСведений.сшпСостояниеСообщений КАК тбСостояние
		                         |ГДЕ
		                         |	тбСостояние.ИдентификаторСобытия = &ИдентификаторСобытия");
		текЗапрос.УстановитьПараметр("ИдентификаторСобытия", Запись.ИдентификаторСобытия);
		
		текВыборка = текЗапрос.Выполнить().Выбрать();
		
		текВыборка.Следующий();
								 
		Статус = текВыборка.СтатусСообщения;
		ДатаИзменения = текВыборка.ДатаИзменения;
		ОписаниеОшибки = текВыборка.ОписаниеОшибки;
		
	КонецЕсли;	
	
	Элементы.СсылкаНаОбъект.Видимость = ЗначениеЗаполнено(Запись.СсылкаНаОбъект);
	Элементы.ОписаниеОшибки.Видимость = ЗначениеЗаполнено(ОписаниеОшибки);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	сшпРаботаСДанными.УстановитьСостояниеСообщения(Запись.ИдентификаторСобытия, Статус, , , , , Перечисления.сшпТипыИнтеграции.Исходящая);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	ДатаИзменения = ПолучитьДатуСеанса();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуСеанса()
	
	Возврат  ТекущаяДатаСеанса();
	
КонецФункции	

#КонецОбласти